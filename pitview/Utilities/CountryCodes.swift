//
//  NationalityToCountryCode.swift
//  PitView
//
//  Created by Nicolas Guarini on 16/03/24.
//

import Foundation

class CountryCodes {
    static func getCountryCode(for nationality: String) -> String? {
        let nationalityToCountryCode: [String: String] = [
            "Albanian": "AL",
            "Algerian": "DZ",
            "American": "US",
            "Andorran": "AD",
            "Argentinian": "AR",
            "Armenian": "AM",
            "Australian": "AU",
            "Austrian": "AT",
            "Azerbaijani": "AZ",
            "Bahraini": "BH",
            "Bangladeshi": "BD",
            "Barbadian": "BB",
            "Belarusian": "BY",
            "Belgian": "BE",
            "Bolivian": "BO",
            "Brazilian": "BR",
            "British": "GB",
            "Bruneian": "BN",
            "Bulgarian": "BG",
            "Burundian": "BI",
            "Cambodian": "KH",
            "Cameroonian": "CM",
            "Canadian": "CA",
            "Chilean": "CL",
            "Chinese": "CN",
            "Colombian": "CO",
            "Costa Rican": "CR",
            "Croatian": "HR",
            "Cypriot": "CY",
            "Czech": "CZ",
            "Danish": "DK",
            "Dutch": "NL",
            "Ecuadorian": "EC",
            "Egyptian": "EG",
            "Emirati": "AE",
            "Estonian": "EE",
            "Finnish": "FI",
            "French": "FR",
            "Georgian": "GE",
            "German": "DE",
            "Ghanaian": "GH",
            "Greek": "GR",
            "Guatemalan": "GT",
            "Honduran": "HN",
            "Hungarian": "HU",
            "Icelandic": "IS",
            "Indian": "IN",
            "Indonesian": "ID",
            "Irish": "IE",
            "Israeli": "IL",
            "Italian": "IT",
            "Jamaican": "JM",
            "Japanese": "JP",
            "Jordanian": "JO",
            "Kazakhstani": "KZ",
            "Kenyan": "KE",
            "Kuwaiti": "KW",
            "Latvian": "LV",
            "Lebanese": "LB",
            "Lithuanian": "LT",
            "Luxembourger": "LU",
            "Malaysian": "MY",
            "Maltese": "MT",
            "Mexican": "MX",
            "Monegasque": "MC",
            "Moroccan": "MA",
            "Namibian": "NA",
            "Nepalese": "NP",
            "New Zealander": "NZ",
            "Nicaraguan": "NI",
            "Nigerian": "NG",
            "North Macedonian": "MK",
            "Norwegian": "NO",
            "Omani": "OM",
            "Pakistani": "PK",
            "Panamanian": "PA",
            "Paraguayan": "PY",
            "Peruvian": "PE",
            "Filipino": "PH",
            "Polish": "PL",
            "Portuguese": "PT",
            "Qatari": "QA",
            "Romanian": "RO",
            "Russian": "RU",
            "Rwandan": "RW",
            "Salvadoran": "SV",
            "Saudi": "SA",
            "Senegalese": "SN",
            "Serbian": "RS",
            "Seychellois": "SC",
            "Singaporean": "SG",
            "Slovakian": "SK",
            "Slovenian": "SI",
            "South African": "ZA",
            "South Korean": "KR",
            "Spanish": "ES",
            "Sri Lankan": "LK",
            "Swedish": "SE",
            "Swiss": "CH",
            "Syrian": "SY",
            "Taiwanese": "TW",
            "Thai": "TH",
            "Trinidadian": "TT",
            "Tunisian": "TN",
            "Turkish": "TR",
            "Ugandan": "UG",
            "Ukrainian": "UA",
            "Uruguayan": "UY",
            "US": "US",
            "Uzbekistani": "UZ",
            "Venezuelan": "VE",
            "Vietnamese": "VN",
            "Yemeni": "YE",
            "Zambian": "ZM",
            "Zimbabwean": "ZW",
        ]

        return nationalityToCountryCode[nationality]
    }
    
    static func countryCode(for stateName: String) -> String? {
        let locale = Locale(identifier: "en_US")

        guard let countryCode = Locale.Region.isoRegions.first(where: { locale.localizedString(forRegionCode: $0.identifier)?.lowercased() == stateName.lowercased() }) else {
            return nil
        }
        return countryCode.identifier.lowercased()
    }
}

